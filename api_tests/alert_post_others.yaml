# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4

# RoostTestHash=d0cccd6f73

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "alert_post_others.csv"
    fields:
      ["device_id", "alert_type", "alert_message"]
    skipHeader: true

scenarios:
  - name: "Alert API failure and edge case tests"
    flow:
      - log: "POST request to /api/device/alert with missing payload"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json: {}
        expect:
          - statusCode: 400
          - hasProperty: "error"
          - equals:
              - "{{ response.error }}": "invalid input, object invalid"
        # The API should return a 400 status code and an error message 
        # because the request payload is missing.

      - think: 5

      - log: "POST request to /api/device/alert with invalid URL"
        post:
          url: "/api/device/alerts"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json: 
            device_id: "{{ device_id }}"
            alert_type: "{{ alert_type }}"
            alert_message: "{{ alert_message }}"
        expect:
          - statusCode: 404
        # The API should return a 404 status code because the URL is invalid.

      - think: 5

      - log: "POST request to /api/device/alert with invalid authorization token"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "InvalidToken"
          json: 
            device_id: "{{ device_id }}"
            alert_type: "{{ alert_type }}"
            alert_message: "{{ alert_message }}"
        expect:
          - statusCode: 401
        # The API should return a 401 status code because the authorization token is invalid.

      - think: 5

      - log: "POST request to /api/device/alert with invalid payload data type"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json: 
            device_id: 123
            alert_type: false
            alert_message: 456
        expect:
          - statusCode: 400
          - hasProperty: "error"
          - equals:
              - "{{ response.error }}": "invalid input, object invalid"
        # The API should return a 400 status code and an error message 
        # because the data types in the request payload are incorrect.
