# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4


# RoostTestHash=ba1d0a9484

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "alert_post_others.csv"
    fields: 
      - "jetson_uuid"
      - "camera_id"
      - "status"
      - "timestamp"
    skipHeader: true

scenarios:
  - name: "Alert Camera API Failure Scenarios"
    flow:
      - log: "Test case: Missing required jetson_uuid field"
        post:
          url: "/api/device/camera/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
        think: 2

      - log: "Test case: Invalid URL"
        post:
          url: "/api/device/camera/alert_invalid"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
        think: 2

      - log: "Test case: Invalid Authorization token"
        post:
          url: "/api/device/camera/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "InvalidAuthToken"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
        think: 2
