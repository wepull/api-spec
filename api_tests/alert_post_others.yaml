# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4


# RoostTestHash=e5fc604c97

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "alert_post_others.csv"
    fields:
      - "jetson_uuid"
      - "camera_id"
      - "status"
      - "timestamp"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Test Camera Alert API"
    flow:
      - log: "Testing with missing field in payload"
        post:
          url: "/api/device/camera/alert"
          headers:
            content-type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 400
            - hasProperty: "headers"
      - think: 1
      - log: "Testing with invalid URL"
        post:
          url: "/api/device/camera/alertInvalid"
          headers:
            content-type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 404
      - think: 1
      - log: "Testing with invalid authorization token"
        post:
          url: "/api/device/camera/alert"
          headers:
            content-type: "application/json"
            Authorization: "InvalidToken"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 401
            - hasProperty: "headers"
