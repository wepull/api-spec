# ********RoostGPT********

# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /api/device/camera/alert_post for http method type POST in artillery framework
# RoostTestHash=ba1d0a9484
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "api_device_camera_alert_post_others.csv"
    fields: ["jetson_uuid", "camera_id", "status", "timestamp"]
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: "Non-Success API Responses"
    flow:
      - log: "Posting invalid data to /api/device/camera/alert"
      - post:
          url: "/api/device/camera/alert"
          headers:
            Content-Type: "application/json"
            SECURITY_SCHEMA: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - hasProperty: "details"
      - think: 1

      - log: "Posting to invalid URL"
      - post:
          url: "/api/invalid/url"
          headers:
            Content-Type: "application/json"
            SECURITY_SCHEMA: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Posting without authentication"
      - post:
          url: "/api/device/camera/alert"
          headers:
            Content-Type: "application/json"
          json:
            jetson_uuid: "{{ jetson_uuid }}"
            camera_id: "{{ camera_id }}"
            status: "{{ status }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 401
      - think: 1
