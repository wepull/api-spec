# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4

# Test generated for /api/device/alert_post for http method type POST in artillery framework
# RoostTestHash=d0cccd6f73

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "alert_post_success.csv"
    fields:
      - "deviceName"
      - "deviceStatus"
      - "alertTime"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "API testing for /api/device/alert endpoint"
    flow:
      - log: "Sending POST request with valid device alert data"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            deviceName: "{{ deviceName }}"
            deviceStatus: "{{ deviceStatus }}"
            alertTime: "{{ alertTime }}"
          expect:
            - statusCode: 201
            - hasProperty: "message"
            - bodyContains:
                - "alert created"
          # The API should return a 201 status code and a message indicating that the alert was created successfully.
        think: 1

      - log: "Sending POST request with missing device status"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            deviceName: "{{ deviceName }}"
            alertTime: "{{ alertTime }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - bodyContains:
                - "invalid input, object invalid"
          # The API should return a 400 status code and a message indicating that the input was invalid.
        think: 1

      - log: "Sending POST request with missing alert time"
        post:
          url: "/api/device/alert"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            deviceName: "{{ deviceName }}"
            deviceStatus: "{{ deviceStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - bodyContains:
                - "invalid input, object invalid"
          # The API should return a 400 status code and a message indicating that the input was invalid.
        think: 1
