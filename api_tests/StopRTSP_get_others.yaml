# Test generated by RoostGPT for test IPFront-Test using AI Type Open AI and AI Model gpt-4

# RoostTestHash=6d23a25a06

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "StopRTSP_get_others.csv"
    fields:
      - "JetsonID"
      - "camera_id"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20
scenarios:
  - name: "StopRTSP API testing"
    flow:
      - log: "Invalid Authorization token"
        post:
          url: "/StopRTSP"
          json:
            JetsonID: "{{ JetsonID }}"
            camera_id: "{{ camera_id }}"
          headers:
            Authorization: "InvalidToken"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - hasProperty: "code"
          # Expected outcome: The server should respond with a 401 status code and an error message
      - think: 1
      - log: "Invalid URL"
        post:
          url: "/InvalidURL"
          json:
            JetsonID: "{{ JetsonID }}"
            camera_id: "{{ camera_id }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - hasProperty: "code"
          # Expected outcome: The server should respond with a 404 status code and an error message
      - think: 1
      - log: "Missing required parameters"
        post:
          url: "/StopRTSP"
          json:
            JetsonID: "{{ JetsonID }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - hasProperty: "code"
          # Expected outcome: The server should respond with a 400 status code and an error message
      - think: 1
      - log: "Invalid parameters"
        post:
          url: "/StopRTSP"
          json:
            JetsonID: "{{ JetsonID }}"
            camera_id: "InvalidCameraID"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 500
            - hasProperty: "message"
            - hasProperty: "code"
          # Expected outcome: The server should respond with a 500 status code and an error message
